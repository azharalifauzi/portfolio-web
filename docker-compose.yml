version: "3.8"

services:
  # server service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: portfolio-web-server
    ports:
      - "80:80" # Connect localhost 80 port to container 80 port
      - "443:443"
    networks:
      - app-network
    volumes:
      - ./server/nginx/:/etc/nginx/
      - ./server/certs/:/etc/nginx/certs
  # filestream service
  filestream:
    build:
      context: ./filestream
      dockerfile: Dockerfile
      target: dev
    image: portfolio-web-filestream
    ports:
      - "4000"
    volumes:
      - ./filestream/:/app
    networks:
      - app-network
  # api service
  api:
    build:
      context: ./api
      target: dev
      dockerfile: Dockerfile
    image: portfolio-web-api
    container_name: portfolio-web-api
    command: npm run dev
    volumes:
      - ./api/:/app
      - /app/node_modules
    ports:
      - "5000"
    depends_on:
      - postgres
    env_file: ./api/.env
    environment:
      - NODE_ENV=development
    networks:
      - app-network
  # postgres service
  postgres:
    image: postgres
    volumes:
      - data-volume:/var/lib/postgresql/data/
    ports:
      - "8080:5432"
    networks:
      - app-network
    environment:
      - POSTGRES_USER=azharalifauzi
      - POSTGRES_PASSWORD=PostgresForFun
      - POSTGRES_DB=portfolio-db
  # client service
  client:
    build:
      context: ./client
      target: dev
      dockerfile: Dockerfile
    image: portfolio-web-client
    container_name: portfolio-web-client
    command: yarn dev
    volumes:
      - type: bind
        source: ./client/
        target: /app
      - /app/node_modules
    depends_on:
      - api
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local
